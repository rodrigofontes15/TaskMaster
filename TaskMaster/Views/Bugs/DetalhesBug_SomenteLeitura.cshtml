@model TaskMaster.ViewModels.BugsViewModel
@{
    /**/

    /**/

    /**/

    /**/

    ViewBag.Title = "DetalhesBug";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<h3>Área de Trabalho</h3>

@using (Html.BeginForm("Salvar", "Bugs"))
{
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.DescBug)
                @Html.TextAreaFor(m => m.DescBug, new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ProjetosId)
                @Html.TextBox("NomeProjeto", ViewData["NomeProjeto"], new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TasksId)
                @Html.TextBox("NomeTask", ViewData["NomeTask"], new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.TiposBugsId)
                @Html.DropDownListFor(m => m.TiposBugsId, new SelectList(Model.TiposBugs, "TiposBugsId", "TipoBug"), "Selecione...", new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.TiposBugsId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DataBug)
                @Html.TextBoxFor(m => m.DataBug, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.DataBug)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DataEstimada)
                @Html.TextBoxFor(m => m.DataEstimada, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.DataEstimada)
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.EstadosBugId)
                @Html.DropDownListFor(m => m.EstadosBugId, new SelectList(Model.EstadosBugs, "EstadosBugId", "NomeEstado"), "Selecione...", new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.EstadosBugId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DevsId)
                @Html.TextBox("NomeDev", ViewData["NomeDev"], new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UrlRepoCodigo)
                @Html.TextBoxFor(m => m.UrlRepoCodigo, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.UrlRepoCodigo)
            </div>
        </div>
    </div>
    @Html.HiddenFor(c => c.BugsId)
    @Html.HiddenFor(m => m.TasksId)
    @Html.HiddenFor(m => m.DevsId)
    @Html.AntiForgeryToken()

}
    <hr />
@Html.Partial("NotasBug_SomenteLeitura", Model.NotasTrabalhoBugs)
@section scripts
{
    <script>
        $(document).ready(function () {
            var tabela = $("#notas").DataTable({
                "language": {
                    "emptyTable": "Nenhum registro encontrado!",
                    "search": "Buscar:",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "lengthMenu": "Mostrando _MENU_ registros",
                    "paginate": {
                        "first": "Primeira",
                        "last": "Ultima",
                        "next": "Próxima",
                        "previous": "Anterior"
                    }
                }
            });
        });
    </script>
}
