@model TaskMaster.ViewModels.BugsViewModel
@{
    /**/

    /**/

    /**/

    /**/

    ViewBag.Title = "DetalhesBug";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<h3>Área de Trabalho</h3>

@using (Html.BeginForm("SalvarBug", "Bugs"))
{
<div class="form-group" align="justify">
    <button type="submit" class="btn btn-primary btn-sm">Salvar Alterações</button>
    &nbsp;&nbsp;&nbsp;@Html.ActionLink("Voltar", "Index", "Bugs", null, new { @class = "btn btn-primary btn-sm" })
</div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.DescBug)
                @Html.TextAreaFor(m => m.DescBug, new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ProjetosId)
                @Html.TextBox("NomeProjeto", ViewData["NomeProjeto"], new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TasksId)
                @Html.TextBox("NomeTask", ViewData["NomeTask"], new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.TiposBugsId)
                @Html.DropDownListFor(m => m.TiposBugsId, new SelectList(Model.TiposBugs, "TiposBugsId", "TipoBug"), "Selecione...", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TiposBugsId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DataBug)
                @Html.TextBoxFor(m => m.DataBug, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.DataBug)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DataEstimadaBug)
                @Html.TextBoxFor(m => m.DataEstimadaBug, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DataEstimadaBug)
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(m => m.EstadosBugId)
                @Html.DropDownListFor(m => m.EstadosBugId, new SelectList(Model.EstadosBugs, "EstadosBugId", "NomeEstado"), "Selecione...", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EstadosBugId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DevsId)
                @Html.TextBox("NomeDev", ViewData["NomeDev"], new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UrlRepoCodigo)
                @Html.TextBoxFor(m => m.UrlRepoCodigo, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UrlRepoCodigo)
            </div>
        </div>
    </div>
    @Html.HiddenFor(c => c.BugsId)
    @Html.HiddenFor(m => m.TasksId)
    @Html.HiddenFor(m => m.DevsId)
    @Html.AntiForgeryToken()

}
@using (Html.BeginForm("AddNotasBug", "Bugs"))
{
    <hr />
    <h4><b>Notas de Trabalho</b></h4>
    <div class="jumbotron">
        <div class="container">
            @Html.TextAreaFor(m => m.NotasTrabalho, new { @class = "form-control", style = "width: 100%; max-width: 100%;", @cols = "100", @rows = "6" })
        </div>
    </div>
    <div class="form-group" align="justify">
        <button type="submit" class="btn btn-primary btn-sm" id="c => c.BugsId">Adcionar Nota</button>
    </div>
    <hr />
    <div class="row">
        <div class="form-inline">

        </div>
    </div>
    @Html.HiddenFor(c => c.BugsId)
    @Html.AntiForgeryToken()
}
@{ if (User.IsInRole("dev"))
    {@Html.Partial("NotasBug", Model.NotasTrabalhoBugs)
    }
    else
    {
        if (User.IsInRole("admin"))
        {
            @Html.Partial("NotasBug", Model.NotasTrabalhoBugs)
        }
        else { 
        @Html.Partial("NotasBug_SomenteLeitura", Model.NotasTrabalhoBugs)
        }
    }
}
@section scripts
{
    <script>
        $(document).ready(function () {
            var tabela = $("#notas").DataTable({
                "language": {
                    "emptyTable": "Nenhum registro encontrado!",
                    "search": "Buscar:",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "lengthMenu": "Mostrando _MENU_ registros",
                    "paginate": {
                        "first": "Primeira",
                        "last": "Ultima",
                        "next": "Próxima",
                        "previous": "Anterior"
                    }
                }
            });
            $("#notas .js-excluir").on("click", function () {
                var button = $(this);
                bootbox.confirm("Confirma a Exclusão da Nota?", function (resultado) {
                    if (resultado) {
                        $.ajax({
                            url: "/api/NotasTrabalhoBug/" + button.attr("data-nota-id"),
                            method: "DELETE",
                            success: function () {
                                tabela.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}
