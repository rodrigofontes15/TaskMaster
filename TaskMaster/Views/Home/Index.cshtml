@model TaskMaster.ViewModels.BugsViewModel
@{
    /**/

    ViewBag.Title = "Home Page";

    string abertos = ViewData["QtdBugsAbertos"].ToString();
    string emTrat = ViewData["QtdBugsEmTrat"].ToString();
    string Corrig = ViewData["QtdBugsCorrigido"].ToString();

    string qtdprojsNoPrazo = ViewData["qtdprojsNoPrazo"].ToString();
    string qtdprojsEmAtraso = ViewData["qtdprojsEmAtraso"].ToString();

    string bugtipo500 = ViewData["bugtipo500"].ToString();
    string bugtipo404 = ViewData["bugtipo404"].ToString();
    string bugtipoInterface = ViewData["bugtipoInterface"].ToString();
    string bugtipoFluxo = ViewData["bugtipoFluxo"].ToString();
    string bugtipoCalc = ViewData["bugtipoCalc"].ToString();

    string MediaTempoSolucao = ViewData["MediaTempoSolucao"].ToString();

    int ratio = 2;

    int meta = 5;
}

<div class="jumbotron container-fluid">
    <h2><b>Task Master</b></h2>
    <h4>
        Controle o Processo de Desenvolvimento de Software.<br />
        Cadastre Projetos, as respectivas Tarefas (Tasks) de Teste e controle os Bugs encontrados.
    </h4>
</div>
<hr />
<center><h4><b>Time de Desenvolvimento</b></h4></center>
<div class="row">
    @foreach (var dev in Model.Devs)
    {
        <div align="center" class="col-md-3">
            <div class="shadowbox" style="background-color:lightgrey">
                <table align="center">
                    <tr>
                        <td rowspan="3"><img src=@dev.UrlPhotoDev alt="Image" width="60" height="80"></td>
                        <td><h4><b>@dev.DevNome</b></h4></td>
                    </tr>
                    <tr>
                        <td><a href="mailto:@dev.EmailDev" target="_top">Enviar e-mail</a></td>
                    </tr>
                    <tr>
                        <td>@dev.TelDev</td>
                    </tr>
                    <tr>
                        <td colspan="2"><b>Ver @Html.ActionLink("todos os Bugs", "ListarBugDev", "Home", new { DevId = dev.DevsId }, null) com @dev.DevNome</b></td>
                    </tr>
                </table>
            </div>
        </div>
    }
</div>
<hr />
<div class="row">
    <div class="col-md-4" align="center">
        <h4><b>Estado dos Bugs</b></h4>
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th class="active" align="center"><center>Estado</center></th>
                    <th class="active" align="center"><center>Quantidade de Bugs</center></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td align="center" style="background-color:lightcoral">@Html.ActionLink("Abertos", "ListarBugEstado", "Home", new { estado = "Aberto" }, new { Style = "color:White" })</td>
                    <td align="center">@abertos</td>
                </tr>
                <tr>
                    <td align="center" style="background-color:lightsalmon">@Html.ActionLink("Em Tratamento", "ListarBugEstado", "Home", new { estado = "Em Tratamento" }, new { Style = "color:White" })</td>
                    <td align="center">@emTrat</td>
                </tr>
                <tr>
                    <td align="center" style="background-color:lightgreen">@Html.ActionLink("Corrigidos", "ListarBugEstado", "Home", new { estado = "Corrigido" }, new { Style = "color:White" })</td>
                    <td align="center">@Corrig</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="col-md-4" align="center">
        <h4><b>Bugs por Tipo</b></h4>
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th class="active" align="center"><center>Tipo de Bug</center></th>
                    <th class="active" align="center"><center>Quantidade</center></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td align="center">@Html.ActionLink("Erro 500", "ListarBugTipo", "Home", new { tipobug = "Erro 500" }, null)</td>
                    <td align="center">@bugtipo500</td>
                </tr>
                <tr>
                    <td align="center">@Html.ActionLink("Erro 404", "ListarBugTipo", "Home", new { tipobug = "Erro 404" }, null)</td>
                    <td align="center">@bugtipo404</td>
                </tr>
                <tr>
                    <td align="center">@Html.ActionLink("Interface", "ListarBugTipo", "Home", new { tipobug = "Interface" }, null)</td>
                    <td align="center">@bugtipoInterface</td>
                </tr>
                <tr>
                    <td align="center">@Html.ActionLink("Fluxo", "ListarBugTipo", "Home", new { tipobug = "Fluxo" }, null)</td>
                    <td align="center">@bugtipoFluxo</td>
                </tr>
                <tr>
                    <td align="center">@Html.ActionLink("Calculo", "ListarBugTipo", "Home", new { tipobug = "Calculo" }, null)</td>
                    <td align="center">@bugtipoCalc</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="col-md-4" align="center">
        <h4><b>Tempo médio de resolução</b></h4>
        <div class="container-fluid" style="background-color:lightgray">
            <table align="center">
                <tr>
                    @if (MediaTempoSolucao.AsInt() > meta)
                    {
                        <td rowspan="2" colspan="1"><h5><font size="150" color="red">@MediaTempoSolucao&nbsp;</font></h5></td>
                    }
                    else
                    {
                        <td rowspan="2" colspan="1"><h5><font size="150" color="green">@MediaTempoSolucao&nbsp;</font></h5></td>
                    }
                </tr>
                <tr>
                    <td>dias para corrigir um Bug</td>
                </tr>
            </table>
            <table align="center">
                <tr>
                    <td rowspan="2" colspan="1">A meta de dias é</td>
                </tr>
                <tr>
                    <td><h5><font size="150" color="green">@meta</font></h5></td>
                </tr>
            </table>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-4" align="center">
        <h4><b>Estado dos Projetos</b></h4>
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    <th class="active" align="center"><center>Estado</center></th>
                    <th class="active" align="center"><center>Quantidade de Projetos</center></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td align="center" style="background-color:lightcoral">@Html.ActionLink("Em Atraso", "ListaProjetoEstado", "Home", new { estado = "Em Atraso" }, new { Style = "color:White" })</td>
                    <td align="center">@qtdprojsEmAtraso</td>
                </tr>
                <tr>
                    <td align="center" style="background-color:lightgreen">@Html.ActionLink("No Prazo", "ListaProjetoEstado", "Home", new { estado = "No Prazo" }, new { Style = "color:White" })</td>
                    <td align="center">@qtdprojsNoPrazo</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-4" align="center">
        <h4><b>Bugs por Projeto</b></h4>
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th class="active"><center>Projeto</center></th>
                    <th class="active"><center>Bugs</center></th>
                    <th class="active" title="2 Bugs para cada Task do Projeto"><center>Meta</center></th>
                    <th class="active" title="Número real de Bugs encontrados em cada Task do Projeto"><center>Indicador</center></th>
                </tr>
            <tbody>
                @foreach (var projeto in Model.Projetos)
                {
                    <tr>
                        <td>
                            @projeto.NomeProjeto
                        </td>
                        <td>
                            @projeto.QtdBugsPrj
                        </td>
                        <td>
                            1:@ratio
                        </td>
                        @if (@projeto.BugsRatio > @ratio)
                        {
                            <td style="background-color:lightcoral" align="center">
                                <b>1:@projeto.BugsRatio</b>
                            </td>
                        }
                        else
                        {
                            <td style="background-color:lightgreen" align="center">
                                1:@projeto.BugsRatio
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4">
        <h4>Bugs por Tipo de Teste</h4>
    </div>
</div>

<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<div class="row">
    <div class="col-md-6" align="center">
        @using Highsoft.Web.Mvc.Charts
        @using Highsoft.Web.Mvc.Charts.Rendering
        @using System.Collections;

        @{ var chartOptions =
                 new Highcharts
                 {
                     Chart = new Highsoft.Web.Mvc.Charts.Chart
                     {
                         PlotBackgroundColor = null,
                         PlotBorderWidth = null,
                         PlotShadow = new Shadow
                         {
                             Enabled = false
                         }
                     },
                     Title = new Title
                     {
                         Text = "Distribuição % de Bugs"
                     },
                     Tooltip = new Tooltip
                     {
                         PointFormat = "{series.name}: <b>{point.percentage:.1f}%</b>"
                     },
                     PlotOptions = new PlotOptions
                     {
                         Pie = new PlotOptionsPie
                         {
                             AllowPointSelect = true,
                             Cursor = PlotOptionsPieCursor.Pointer,
                             DataLabels = new Hashtable { { "enabled", false } },
                             ShowInLegend = true
                         }
                     },
                     XAxis = new List<XAxis>
                         {
        new XAxis
        {
            Title = new XAxisTitle
            {
                Text = null
            },
            Categories = new List<string> { "Erro 500", "Erro 404", "Interface", "Fluxo", "Calculo" }
        }
                                         },
                     YAxis = new List<YAxis>
                         {
        new YAxis
        {
            Min = 0,
            Title = new YAxisTitle
            {
                Text = "Quantidade de Bugs",
                Align = YAxisTitleAlign.Center
            }
        }
                                         },
                     Series = new List<Series>
                         {
        new PieSeries
        {
            Name = "Percentual",
            Data = @ViewData["pieData"] as List<PieSeriesData>
        },

                                         }
                 };

            chartOptions.ID = "chart";
            var renderer = new HighchartsRenderer(chartOptions);
        }

        @Html.Raw(renderer.RenderHtml())
    </div>
    <div class="col-md-6" align="center">
        placeholder
        grafico de linha de tendencia com Bugs encontrados por dia VERSUS corrigidos
        @{var chartOptions2 = new Highcharts
            {
                Title = new Title
                {
                    Text = "Monthly Average Temperature",
                    X = -20
                },
                Subtitle = new Subtitle
                {
                    Text = "Source: WorldClimate.com",
                    X = -20
                },
                XAxis = new List<XAxis>
{
                new XAxis
                {
                    Categories = new List<string> { "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" },

                }
            },
                YAxis = new List<YAxis>
{
                new YAxis
                {
                    Title = new YAxisTitle
                    {
                        Text = "Temperature (°C)"
                    },
                    PlotLines = new List<YAxisPlotLines>
    {
                            new YAxisPlotLines
                        {
                            Value = 0,
                            Width = 1,
                            Color = "#808080"
                        }
                    }
                }
            },
                Tooltip = new Tooltip
                {
                    PointFormat = "{point.y} - {point.custom1} - {point.custom2}"
                    //ValueSuffix = "°C"
                },
                Legend = new Legend
                {
                    Layout = LegendLayout.Vertical,
                    Align = LegendAlign.Right,
                    VerticalAlign = LegendVerticalAlign.Middle,
                    BorderWidth = 0
                },
                Series = new List<Series>
{
                new LineSeries
                {
                    Name = "Tokyo",
                    Data = @ViewData["tokyoData"] as List<LineSeriesData>
                },
                new LineSeries
                {
                    Name = "NY",
                    Data = @ViewData["nyData"] as List<LineSeriesData>
                },
                new LineSeries
                {
                    Name = "Berlin",
                    Data = @ViewData["berlinData"] as List<LineSeriesData>
                },
                new LineSeries
                {
                    Name = "London",
                    Data = @ViewData["londonData"] as List<LineSeriesData>
                }
            }
            };

            chartOptions2.ID = "chart2";
            var renderer2 = new HighchartsRenderer(chartOptions2);
        }

        @Html.Raw(renderer2.RenderHtml())
    </div>
</div>

